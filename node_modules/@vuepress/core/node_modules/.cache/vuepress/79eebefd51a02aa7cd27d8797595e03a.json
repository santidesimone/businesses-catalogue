{"remainingRequest":"/Users/santidesimone/clients/me/businesses-catalogue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/santidesimone/clients/me/businesses-catalogue/src/.vuepress/theme/components/Post.vue?vue&type=style&index=1&id=688dbd1a&lang=stylus&scoped=true&","dependencies":[{"path":"/Users/santidesimone/clients/me/businesses-catalogue/src/.vuepress/theme/components/Post.vue","mtime":1675460504108},{"path":"/Users/santidesimone/clients/me/businesses-catalogue/node_modules/css-loader/dist/cjs.js","mtime":1675377198484},{"path":"/Users/santidesimone/clients/me/businesses-catalogue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1675460524855},{"path":"/Users/santidesimone/clients/me/businesses-catalogue/node_modules/postcss-loader/src/index.js","mtime":1675377198657},{"path":"/Users/santidesimone/clients/me/businesses-catalogue/node_modules/stylus-loader/index.js","mtime":1675377197479},{"path":"/Users/santidesimone/clients/me/businesses-catalogue/node_modules/cache-loader/dist/cjs.js","mtime":1675377198708},{"path":"/Users/santidesimone/clients/me/businesses-catalogue/node_modules/vue-loader/lib/index.js","mtime":1675460524855}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmhlYWRlcgogIHBhZGRpbmctYm90dG9tIDEuNXJlbQogIG1hcmdpbi1ib3R0b20gMS41cmVtCgoudGl0bGUKICBmb250LXNpemUgMy4ycmVtCiAgbWFyZ2luIDAgMCAuNGVtCiAgbWFyZ2luLWJvdHRvbSAuNXJlbQoKLmV4Y2VycHQKICBmb250LXNpemUgMS4ycmVtCiAgY29sb3IgbGlnaHRlbigkdGV4dENvbG9yLCAyNSUpCiAgbWFyZ2luIDAgMCAuNWVtCiAgbGluZS1oZWlnaHQgMS40ZW0KICBtYXJnaW4tYm90dG9tIDFyZW0KCi5wYWdlLWVkaXQKICBwYWRkaW5nLXRvcCAxcmVtCiAgcGFkZGluZy1ib3R0b20gMXJlbQogIHBhZGRpbmctbGVmdCAwCiAgcGFkZGluZy1yaWdodCAwCiAgb3ZlcmZsb3cgYXV0bwogIC5lZGl0LWxpbmsKICAgIGRpc3BsYXkgaW5saW5lLWJsb2NrCiAgICBhCiAgICAgIGNvbG9yIGxpZ2h0ZW4oJHRleHRDb2xvciwgMjUlKQogICAgICBtYXJnaW4tcmlnaHQgLjI1cmVtCgpAbWVkaWEgKG1heC13aWR0aDogJE1RTW9iaWxlKQogIC5wYWdlLWVkaXQKICAgIC5lZGl0LWxpbmsKICAgICAgbWFyZ2luLWJvdHRvbSAuNXJlbQogICAgLmxhc3QtdXBkYXRlZAogICAgICBmb250LXNpemUgLjhlbQogICAgICBmbG9hdCBub25lCiAgICAgIHRleHQtYWxpZ24gbGVmdAoKQG1lZGlhIChtYXgtd2lkdGg6ICRNUU1vYmlsZU5hcnJvdykgewogIC50aXRsZSB7CiAgICBmb250LXNpemU6IDIuNDQxcmVtOwogIH0KfQo="},{"version":3,"sources":["Post.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsMA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Post.vue","sourceRoot":"src/.vuepress/theme/components","sourcesContent":["<template>\n  <div class=\"theme-default-content\">\n    <article>\n      <header class=\"header\">\n        <section>\n          <TagList :tags=\"$frontmatter.tags\" />\n        </section>\n        <h1 class=\"title\">{{ $page.title }}</h1>\n        <template v-if=\"$page.frontmatter.excerpt\">\n          <p class=\"excerpt\">{{ $page.frontmatter.excerpt }}</p>\n        </template>\n        <section>\n          <PostMeta :post=\"$page\" show-updated/>\n        </section>\n      </header>\n\n      <section>\n        <Content class=\"body\" :custom=\"false\"/>\n      </section>\n\n      <div class=\"page-edit\">\n        <div\n          class=\"edit-link\"\n          v-if=\"editLink\"\n        >\n          <a\n            :href=\"editLink\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >{{ editLinkText }}</a>\n          <OutboundLink/>\n        </div>\n      </div>\n\n      <div class=\"page-nav\" v-if=\"prev || next\">\n        <p class=\"inner\">\n          <span\n            v-if=\"prev\"\n            class=\"prev\"\n          >\n            ←\n            <router-link\n              v-if=\"prev\"\n              class=\"prev\"\n              :to=\"prev.path\"\n            >\n              {{ prev.title || prev.path }}\n            </router-link>\n          </span>\n\n          <span\n            v-if=\"next\"\n            class=\"next\"\n          >\n            <router-link\n              v-if=\"next\"\n              :to=\"next.path\"\n            >\n              {{ next.title || next.path }}\n            </router-link>\n            →\n          </span>\n        </p>\n      </div>\n\n      <slot name=\"bottom\"/>\n    </article>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment'\nimport TagList from './TagList'\nimport PostMeta from './PostMeta'\nimport { resolvePage, normalize, outboundRE, endingSlashRE } from '../util'\n\nexport default {\n  components: { TagList, PostMeta },\n  props: ['sidebarItems'],\n\n  computed: {\n    prev () {\n      const prev = this.$page.frontmatter.prev\n      if (prev === false) {\n        return\n      } else if (prev) {\n        return resolvePage(this.$site.pages, prev, this.$route.path)\n      } else {\n        return resolvePrev(this.$page, this.sidebarItems)\n      }\n    },\n\n    next () {\n      const next = this.$page.frontmatter.next\n      if (next === false) {\n        return\n      } else if (next) {\n        return resolvePage(this.$site.pages, next, this.$route.path)\n      } else {\n        return resolveNext(this.$page, this.sidebarItems)\n      }\n    },\n\n    editLink () {\n      if (this.$page.frontmatter.editLink === false) {\n        return\n      }\n      const {\n        repo,\n        editLinks,\n        docsDir = '',\n        docsBranch = 'master',\n        docsRepo = repo\n      } = this.$site.themeConfig\n\n      let path = normalize(this.$page.path)\n      if (endingSlashRE.test(path)) {\n        path += 'README.md'\n      } else {\n        path += '.md'\n      }\n      if (docsRepo && editLinks) {\n        return this.createEditLink(repo, docsRepo, docsDir, docsBranch, path)\n      }\n    },\n\n    editLinkText () {\n      return (\n        this.$themeLocaleConfig.editLinkText ||\n        this.$site.themeConfig.editLinkText ||\n        `Edit this page`\n      )\n    },\n  },\n\n  methods: {\n    createEditLink (repo, docsRepo, docsDir, docsBranch, path) {\n      const bitbucket = /bitbucket.org/\n      if (bitbucket.test(repo)) {\n        const base = outboundRE.test(docsRepo)\n          ? docsRepo\n          : repo\n        return (\n          base.replace(endingSlashRE, '') +\n           `/${docsBranch}` +\n           (docsDir ? '/' + docsDir.replace(endingSlashRE, '') : '') +\n           path +\n           `?mode=edit&spa=0&at=${docsBranch}&fileviewer=file-view-default`\n        )\n      }\n\n      const base = outboundRE.test(docsRepo)\n        ? docsRepo\n        : `https://github.com/${docsRepo}`\n\n      return (\n        base.replace(endingSlashRE, '') +\n        `/edit/${docsBranch}` +\n        (docsDir ? '/' + docsDir.replace(endingSlashRE, '') : '') +\n        path\n      )\n    }\n  }\n}\n\nfunction resolvePrev (page, items) {\n  return find(page, items, -1)\n}\n\nfunction resolveNext (page, items) {\n  return find(page, items, 1)\n}\n\nfunction find (page, items, offset) {\n  const res = []\n  items.forEach(item => {\n    if (item.type === 'group') {\n      res.push(...item.children || [])\n    } else {\n      res.push(item)\n    }\n  })\n  for (let i = 0; i < res.length; i++) {\n    const cur = res[i]\n    if (cur.type === 'page' && cur.path === page.path) {\n      return res[i + offset]\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n.body\n  margin-bottom 3rem\n</style>\n\n<style lang=\"stylus\" scoped>\n\n.header\n  padding-bottom 1.5rem\n  margin-bottom 1.5rem\n\n.title\n  font-size 3.2rem\n  margin 0 0 .4em\n  margin-bottom .5rem\n\n.excerpt\n  font-size 1.2rem\n  color lighten($textColor, 25%)\n  margin 0 0 .5em\n  line-height 1.4em\n  margin-bottom 1rem\n\n.page-edit\n  padding-top 1rem\n  padding-bottom 1rem\n  padding-left 0\n  padding-right 0\n  overflow auto\n  .edit-link\n    display inline-block\n    a\n      color lighten($textColor, 25%)\n      margin-right .25rem\n\n@media (max-width: $MQMobile)\n  .page-edit\n    .edit-link\n      margin-bottom .5rem\n    .last-updated\n      font-size .8em\n      float none\n      text-align left\n\n@media (max-width: $MQMobileNarrow) {\n  .title {\n    font-size: 2.441rem;\n  }\n}\n</style>\n"]}]}