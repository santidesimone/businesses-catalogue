{"remainingRequest":"/Users/santidesimone/clients/me/businesses-catalogue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/santidesimone/clients/me/businesses-catalogue/src/.vuepress/theme/components/Blog.vue?vue&type=style&index=0&id=604690f5&lang=stylus&scoped=true&","dependencies":[{"path":"/Users/santidesimone/clients/me/businesses-catalogue/src/.vuepress/theme/components/Blog.vue","mtime":1675460504107},{"path":"/Users/santidesimone/clients/me/businesses-catalogue/node_modules/css-loader/dist/cjs.js","mtime":1675377198484},{"path":"/Users/santidesimone/clients/me/businesses-catalogue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1675460524855},{"path":"/Users/santidesimone/clients/me/businesses-catalogue/node_modules/postcss-loader/src/index.js","mtime":1675377198657},{"path":"/Users/santidesimone/clients/me/businesses-catalogue/node_modules/stylus-loader/index.js","mtime":1675377197479},{"path":"/Users/santidesimone/clients/me/businesses-catalogue/node_modules/cache-loader/dist/cjs.js","mtime":1675377198708},{"path":"/Users/santidesimone/clients/me/businesses-catalogue/node_modules/vue-loader/lib/index.js","mtime":1675460524855}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYmxvZy1saXN0CiAgICBwYWRkaW5nIDAKICAgIG1hcmdpbiAwCgouYmxvZy1saXN0X19pdGVtCiAgICBsaXN0LXN0eWxlLXR5cGUgbm9uZQoKLmJsb2ctbGlzdF9fdGFncwogICAgbWFyZ2luLWJvdHRvbSAxNXB4CgouYnV0dG9uLS1wYWdpbmF0aW9uCiAgICB0ZXh0LWRlY29yYXRpb24gbm9uZQogICAgY29sb3IgbGlnaHRlbigkdGV4dENvbG9yLCAyNSUpCiAgICAmOmhvdmVyCiAgICAgICAgdGV4dC1kZWNvcmF0aW9uIG5vbmUgIWltcG9ydGFudAogICAgICAgIGJvcmRlci1ib3R0b20gMnB4IHNvbGlkICRhY2NlbnRDb2xvcgoKLmNsZWFyLWZpbHRlci1idG4KICAgIGFsaWduLXNlbGYgY2VudGVyCiAgICBtYXJnaW4tbGVmdCAyMHB4CgouZmlsdGVyZWQtaGVhZGluZwogICAgZGlzcGxheSBmbGV4CgoucGFnaW5hdGlvbgogICAgZGlzcGxheSBmbGV4CiAgICBqdXN0aWZ5LWNvbnRlbnQgc3BhY2UtYmV0d2Vlbgo="},{"version":3,"sources":["Blog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyIA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA","file":"Blog.vue","sourceRoot":"src/.vuepress/theme/components","sourcesContent":["<template>\n\t<div class=\"theme-default-content\">  \n    <div \n      v-if=\"selectedTags.length > 0\"\n      class=\"filtered-heading\"\n    >\n      <h2>Filtered by {{ selectedTags.join(',') }}</h2>\n      <button\n        type=\"button\"\n        @click=\"resetTags\"\n        class=\"btn clear-filter-btn\"\n      >\n        Clear filter\n      </button>\n    </div>\n    <ul class=\"blog-list\">\n      <li v-for=\"(item, index) in filteredList\"\n        class=\"blog-list__item\">\n        <PostPreview v-on:add-tag=\"addTag($event)\"\n          v-show=\"index >= currentPage * pageSize && index < (currentPage + 1) * pageSize\"\n          :item=\"item\"\n          v-on:tag-click=\"console.log($event)\"\n        />\n      </li>\n    </ul>\n\n    <div class=\"pagination\">\n      <div>\n        <a href=\"#\"\n          v-show=\"currentPage > 0\" \n          @click=\"previousPage\"\n          class=\"button--pagination\" \n        >\n          Newer Posts\n        </a>\n      </div>\n      <div>\n        <a href=\"#\"\n          v-show=\"currentPage < totalPages - 1\"\n          @click=\"nextPage\"\n          class=\"button--pagination\"\n        >\n          Older Posts\n        </a>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PostPreview from './PostPreview'\n\nexport default {\n    components: { PostPreview },\n    props: {\n        pages: {\n            type: Array,\n            default: []\n        },\n        pageSize: {\n            type: Number,\n            default: 5\n        },\n        startPage: {\n            type: Number,\n            default: 0\n        }\n    },\n    data() {\n        return {\n            currentPage: Math.ceil(this.startPage / this.pageSize),\n            selectedTags: []\n        }\n    },\n    computed: {\n        filteredList() {\n            if (this.pages) {\n                \n                return this.pages.filter(item => {\n                    const isBlogPost = !!item.frontmatter.blog\n                    const isReadyToPublish = new Date(item.frontmatter.date) <= new Date()\n                     // check for locales\n                    let isCurrentLocale = true;\n                    if(this.$site.locales) {\n                        const localePath = this.$route.path.split('/')[1] || \"\";\n                        isCurrentLocale = item.relativePath.startsWith(localePath);   \n                    }\n                    // check if tags contain all of the selected tags\n                    const hasTags = !!item.frontmatter.tags && this.selectedTags.every((tag) => item.frontmatter.tags.includes(tag))\n\n                    if (!isBlogPost || !isReadyToPublish || (this.selectedTags.length > 0 && !hasTags) || !isCurrentLocale){ \n                        return false\n                    }\n\n                    return true\n                    \n                }).sort((a, b) => new Date(b.frontmatter.date) - new Date(a.frontmatter.date))\n            }\n        },\n\n        totalPages() {\n            \n            return Math.ceil(this.filteredList.length / this.pageSize)\n        },\n    },\n\n    mounted() {\n        this.currentPage =  Math.min(Math.max(this.currentPage, 0), this.totalPages - 1)\n    },\n\n    methods: {\n        nextPage() {\n            this.currentPage = this.currentPage >= this.totalPages - 1 ? this.totalPages - 1 : this.currentPage + 1\n        },\n        previousPage() {\n            this.currentPage = this.currentPage < 0 ? 0 : this.currentPage - 1\n        },\n        addTag(tag) {\n            const tagExists = this.selectedTags.some(item => {\n                return item === tag\n            })\n\n            if (!tagExists){\n                this.selectedTags = this.selectedTags.concat(tag)\n            }\n        },\n        removeTag(tag) {\n            this.selectedTags.filter(t => t != tag)\n        },\n        resetTags(){\n            this.selectedTags = []\n        }\n    }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n.blog-list\n    padding 0\n    margin 0\n\n.blog-list__item\n    list-style-type none\n\n.blog-list__tags\n    margin-bottom 15px\n\n.button--pagination\n    text-decoration none\n    color lighten($textColor, 25%)\n    &:hover\n        text-decoration none !important\n        border-bottom 2px solid $accentColor\n\n.clear-filter-btn\n    align-self center\n    margin-left 20px\n\n.filtered-heading\n    display flex\n\n.pagination\n    display flex\n    justify-content space-between\n</style>\n"]}]}