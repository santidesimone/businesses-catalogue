{"remainingRequest":"/Users/santidesimone/clients/me/businesses-catalogue/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/santidesimone/clients/me/businesses-catalogue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/santidesimone/clients/me/businesses-catalogue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/santidesimone/clients/me/businesses-catalogue/src/.vuepress/theme/components/PostMeta.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/santidesimone/clients/me/businesses-catalogue/src/.vuepress/theme/components/PostMeta.vue","mtime":1675460504108},{"path":"/Users/santidesimone/clients/me/businesses-catalogue/node_modules/cache-loader/dist/cjs.js","mtime":1675377198708},{"path":"/Users/santidesimone/clients/me/businesses-catalogue/node_modules/babel-loader/lib/index.js","mtime":1675460524206},{"path":"/Users/santidesimone/clients/me/businesses-catalogue/node_modules/cache-loader/dist/cjs.js","mtime":1675377198708},{"path":"/Users/santidesimone/clients/me/businesses-catalogue/node_modules/vue-loader/lib/index.js","mtime":1675460524855}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7Ci8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IGZvcm1hdFB1Ymxpc2hEYXRlIH0gZnJvbSAnLi4vdXRpbCc7CmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JzsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICBwb3N0OiBPYmplY3QsCiAgICBzaG93VXBkYXRlZDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICAiZGVmYXVsdCI6IGZhbHNlCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBmb3JtYXRQdWJsaXNoRGF0ZTogZm9ybWF0UHVibGlzaERhdGUsCiAgICBjb250ZW50OiBmdW5jdGlvbiBjb250ZW50KCkgewogICAgICB2YXIgY29udGVudCA9IFt0aGlzLnB1Ymxpc2hlZEF0KCksIHRoaXMucG9zdC5yZWFkaW5nVGltZSAmJiB0aGlzLnBvc3QucmVhZGluZ1RpbWUudGV4dCwgdGhpcy5zaG93VXBkYXRlZCAmJiB0aGlzLmxhc3RVcGRhdGVkKCldOwogICAgICByZXR1cm4gY29udGVudC5maWx0ZXIoZnVuY3Rpb24gKHgpIHsKICAgICAgICByZXR1cm4geDsKICAgICAgfSkuam9pbignIOKAoiAnKTsKICAgIH0sCiAgICBzaG91bGRTaG93U2VwYXJhdG9yOiBmdW5jdGlvbiBzaG91bGRTaG93U2VwYXJhdG9yKCkgewogICAgICByZXR1cm4gdGhpcy5wb3N0LmZyb250bWF0dGVyLmRhdGUgJiYgdGhpcy5wb3N0LnJlYWRpbmdUaW1lOwogICAgfSwKICAgIHB1Ymxpc2hlZEF0OiBmdW5jdGlvbiBwdWJsaXNoZWRBdCgpIHsKICAgICAgcmV0dXJuIHRoaXMucG9zdC5mcm9udG1hdHRlci5kYXRlICYmIG1vbWVudCh0aGlzLnBvc3QuZnJvbnRtYXR0ZXIuZGF0ZSkuZm9ybWF0KCdERCBNTU0gWVlZWScpOwogICAgfSwKICAgIGxhc3RVcGRhdGVkOiBmdW5jdGlvbiBsYXN0VXBkYXRlZCgpIHsKICAgICAgaWYgKHRoaXMuJHBhZ2UubGFzdFVwZGF0ZWQpIHsKICAgICAgICByZXR1cm4gdGhpcy5sYXN0VXBkYXRlZFRleHQoKSArICcgJyArIG1vbWVudCh0aGlzLiRwYWdlLmxhc3RVcGRhdGVkKS5mcm9tTm93KCk7CiAgICAgIH0KICAgIH0sCiAgICBsYXN0VXBkYXRlZFRleHQ6IGZ1bmN0aW9uIGxhc3RVcGRhdGVkVGV4dCgpIHsKICAgICAgaWYgKHR5cGVvZiB0aGlzLiR0aGVtZUxvY2FsZUNvbmZpZy5sYXN0VXBkYXRlZCA9PT0gJ3N0cmluZycpIHsKICAgICAgICByZXR1cm4gdGhpcy4kdGhlbWVMb2NhbGVDb25maWcubGFzdFVwZGF0ZWQ7CiAgICAgIH0KCiAgICAgIGlmICh0eXBlb2YgdGhpcy4kc2l0ZS50aGVtZUNvbmZpZy5sYXN0VXBkYXRlZCA9PT0gJ3N0cmluZycpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc2l0ZS50aGVtZUNvbmZpZy5sYXN0VXBkYXRlZDsKICAgICAgfQoKICAgICAgcmV0dXJuICdMYXN0IFVwZGF0ZWQnOwogICAgfQogIH0KfTs="},{"version":3,"sources":["PostMeta.vue"],"names":[],"mappings":";;;;;;;;AAOA,SAAA,iBAAA,QAAA,SAAA;AACA,OAAA,MAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA,MADA;AAEA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,iBAAA;AAFA;AAFA,GADA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,iBAAA,EAAA,iBADA;AAEA,IAAA,OAFA,qBAEA;AACA,UAAA,OAAA,GAAA,CACA,KAAA,WAAA,EADA,EAEA,KAAA,IAAA,CAAA,WAAA,IAAA,KAAA,IAAA,CAAA,WAAA,CAAA,IAFA,EAGA,KAAA,WAAA,IAAA,KAAA,WAAA,EAHA,CAAA;AAKA,aAAA,OAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA;AAAA,OAAA,EAAA,IAAA,CAAA,KAAA,CAAA;AACA,KATA;AAUA,IAAA,mBAVA,iCAUA;AACA,aAAA,KAAA,IAAA,CAAA,WAAA,CAAA,IAAA,IAAA,KAAA,IAAA,CAAA,WAAA;AACA,KAZA;AAaA,IAAA,WAbA,yBAaA;AACA,aAAA,KAAA,IAAA,CAAA,WAAA,CAAA,IAAA,IAAA,MAAA,CAAA,KAAA,IAAA,CAAA,WAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,aAAA,CAAA;AACA,KAfA;AAgBA,IAAA,WAhBA,yBAgBA;AACA,UAAA,KAAA,KAAA,CAAA,WAAA,EAAA;AACA,eAAA,KAAA,eAAA,KAAA,GAAA,GAAA,MAAA,CAAA,KAAA,KAAA,CAAA,WAAA,CAAA,CAAA,OAAA,EAAA;AACA;AACA,KApBA;AAqBA,IAAA,eArBA,6BAqBA;AACA,UAAA,OAAA,KAAA,kBAAA,CAAA,WAAA,KAAA,QAAA,EAAA;AACA,eAAA,KAAA,kBAAA,CAAA,WAAA;AACA;;AACA,UAAA,OAAA,KAAA,KAAA,CAAA,WAAA,CAAA,WAAA,KAAA,QAAA,EAAA;AACA,eAAA,KAAA,KAAA,CAAA,WAAA,CAAA,WAAA;AACA;;AACA,aAAA,cAAA;AACA;AA7BA;AARA,CAAA","sourcesContent":["<template>\n  <span class=\"meta\">\n    <time datetime=\"$page.lastUpdated\"></time> {{ content() }}\n  </span>\n</template>\n\n<script>\nimport { formatPublishDate } from '../util'\nimport moment from 'moment'\n\nexport default {\n  props: {\n    post: Object,\n    showUpdated: {\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {\n    formatPublishDate,\n    content() {\n      const content = [\n        this.publishedAt(),\n        this.post.readingTime && this.post.readingTime.text,\n        this.showUpdated && this.lastUpdated()\n      ]\n      return content.filter(x => x).join(' â€¢ ')\n    },\n    shouldShowSeparator () {\n      return this.post.frontmatter.date && this.post.readingTime\n    },\n    publishedAt () {\n      return this.post.frontmatter.date && moment(this.post.frontmatter.date).format('DD MMM YYYY')\n    },\n    lastUpdated () {\n      if (this.$page.lastUpdated) {\n        return this.lastUpdatedText() + ' ' + moment(this.$page.lastUpdated).fromNow()\n      }\n    },\n    lastUpdatedText () {\n      if (typeof this.$themeLocaleConfig.lastUpdated === 'string') {\n        return this.$themeLocaleConfig.lastUpdated\n      }\n      if (typeof this.$site.themeConfig.lastUpdated === 'string') {\n        return this.$site.themeConfig.lastUpdated\n      }\n      return 'Last Updated'\n    },\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n.meta\n  color #aaa\n  font-size .9rem\n</style>"],"sourceRoot":"src/.vuepress/theme/components"}]}